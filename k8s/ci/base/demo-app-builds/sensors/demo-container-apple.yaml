apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: demo-container-apple
  namespace: demo-app-builds
spec:
  template:
    serviceAccountName: argo-events
  dependencies:
  - name: apple-webhook
    eventSourceName: demo-build-webhook
    eventName: apple-webhook
  triggers:
  - template:
      name: webhook-workflow-trigger
      k8s:
        group: argoproj.io
        version: v1alpha1
        resource: workflows
        operation: create
        parameters:
        - src:
            dependencyName: apple-webhook
            dataKey: body.version
          dest: spec.arguments.parameters.3.value
        - src:
            dependencyName: apple-webhook
            dataKey: body.version
          dest: metadata.labels.version
        source:
          resource:
            apiVersion: argoproj.io/v1alpha1
            kind: Workflow
            metadata:
              namespace: argo
              generateName: demo-container-apple-
              labels:
                app.kubernetes.io/part-of: demo
                app.kubernetes.io/component: apple
                app.kubernetes.io/instance: workflow
                version: CHANGEME
              annotations:
                workflows.argoproj.io/default-artifact-repository: default-v1
            spec:
              serviceAccountName: argo
              onExit: exit-handler
              entrypoint: cicd
              volumes:
              - name: docker-config
                secret:
                  secretName: regcred
              arguments:
                parameters:
                - name: repo
                  value: git@github.com:Siebjee/k8s.git
                - name: revision
                  value: master
                - name: image-name-backend
                  value: harbor.k8s-local.io/demo/http-echo
                - name: image-tag
                  value: THIS_WILL_CHANGE
              templates:
              - name: cicd
                steps:
                - - name: checkout
                    template: checkout
                - - name: build-push-docker
                    template: build-push-docker
                    arguments:
                      artifacts:
                      - name: git-repo
                        from: "{{steps.checkout.outputs.artifacts.source}}"
              - name: checkout
                inputs:
                  artifacts:
                  - name: git-repo
                    path: /src
                    git:
                      repo: "{{workflow.parameters.repo}}"
                      revision: "{{workflow.parameters.revision}}"
                      sshPrivateKeySecret:
                        name: ci-key-rsa
                        key: identity
                metadata:
                  labels:
                    app: argo
                container:
                  image: alpine/git
                  command: [sh, -c]
                  args:
                  - |
                    cd /src
                    git rev-parse --short HEAD > /tmp/git-commit
                outputs:
                  artifacts:
                  - name: source
                    path: /src
                  parameters:
                  - name: tag
                    valueFrom:
                      path: /tmp/git-commit
              - name: build-push-docker
                inputs:
                  artifacts:
                  - name: git-repo
                    path: /src
                metadata:
                  labels:
                    app: argo
                container:
                  image: docker:18.09
                  workingDir: /src
                  command: ["/bin/sh", "-c"]
                  args:
                  - |
                    set -xeou pipefail
                    until docker ps; do sleep 1; done
                    cd /src
                    docker build \
                      -f src/Dockerfile \
                      --build-arg version={{workflow.parameters.image-tag}} \
                      --build-arg demo_app=apple \
                      --tag {{workflow.parameters.image-name-backend}}:{{workflow.parameters.image-tag}}-apple .

                    docker login harbor.k8s-local.io -u demo -p Demodemo0
                    docker push {{workflow.parameters.image-name-backend}}:{{workflow.parameters.image-tag}}-apple
                  env:
                  - name: DOCKER_HOST
                    value: 127.0.0.1
                sidecars:
                - name: docker-in-docker
                  image: docker:18-dind
                  command: ["dockerd-entrypoint.sh"]
                  args: ["--insecure-registry", "harbor.k8s-local.io"]
                  securityContext:
                    privileged: true
                  mirrorVolumeMounts: true
              - name: exit-handler
                steps:
                - - name: notify
                    template: send-slack
              - name: send-slack
                container:
                  image: alpine:latest
                  command: [sh, -c]
                  args:
                  - |
                    apk add --no-cache curl
                    curl -d '{"channel":"demo", "message": "Workflow: {{workflow.name}} {{workflow.status}}."}' \
                      -H "Content-Type: application/json" -X POST http://slackhook-eventsource-svc.argo-events:12000/slack
